services:
  web:
    build: .
    container_name: punk_recognizer_web
    ports:
      - "8000:8000"
    volumes:
      - static_volume:/punk_recognizer/staticfiles
    env_file:
      - .env
    environment:
      RUN_MIGRATIONS: "1"
    depends_on:
      - db

  db:
    image: postgres:15
    container_name: postgres_db
    restart: always
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7
    container_name: redis
    restart: always

  celery_worker:
    build: .
    container_name: celery_worker
    command: celery -A celery_app:app worker --loglevel=info --concurrency=2 --prefetch-multiplier=1
    restart: always
    env_file:
      - .env
    environment:
      RUN_MIGRATIONS: "0"
    depends_on:
      - redis
      - web

  nginx:
    build:
      context: .
      dockerfile: nginx.Dockerfile
    container_name: nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./certs:/etc/nginx/ssl:ro
      - ./mime.types:/etc/nginx/mime.types:ro
      - static_volume:/punk_recognizer/staticfiles:ro
    entrypoint: /nginx-entrypoint.sh
    env_file:
      - .env
    depends_on:
      - web

volumes:
  postgres_data:
  static_volume: