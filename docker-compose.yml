services:
  _base:
    image: punk_recognizer_base:latest
    build:
      context: .
      dockerfile: docker/base.Dockerfile
    profiles: ["build-only"]
  web:
    build:
      context: .
      dockerfile: docker/web.Dockerfile
    container_name: punk_recognizer_web
    ports:
      - "8000:8000"
    volumes:
      - ./static:/punk_recognizer/static:ro
    env_file:
      - .env
    environment:
      RUN_MIGRATIONS: "1"
    depends_on:
      - db

  db:
    image: postgres:15
    container_name: postgres_db
    restart: always
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7
    container_name: redis
    restart: always

  celery_worker:
    build:
      context: .
      dockerfile: docker/celery.Dockerfile
    container_name: celery_worker
    restart: always
    env_file:
      - .env
    environment:
      RUN_MIGRATIONS: "0"
    depends_on:
      - redis
      - db

  nginx:
    build:
      context: .
      dockerfile: docker/nginx.Dockerfile
    container_name: nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/certs:/etc/nginx/ssl:ro
      - ./nginx/mime.types:/etc/nginx/mime.types:ro
      - ./static:/punk_recognizer/static:ro
    env_file:
      - .env
    depends_on:
      - web

volumes:
  postgres_data: